Voici le fichier **sw.js** complet et corrigé pour votre PWA :

```javascript
const CACHE_NAME = 'password-manager-v2';
const urlsToCache = [
    '/',
    '/index.html',
    'https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js',
    '/manifest.json'
];

// Installation du Service Worker
self.addEventListener('install', (event) => {
    console.log('Service Worker installé');
    event.waitUntil(
        caches.open(CACHE_NAME)
            .then((cache) => {
                console.log('Mise en cache des assets');
                return cache.addAll(urlsToCache);
            })
    );
});

// Activation du Service Worker
self.addEventListener('activate', (event) => {
    console.log('Service Worker activé');
    const cacheWhitelist = [CACHE_NAME];
    event.waitUntil(
        caches.keys().then((cacheNames) => {
            return Promise.all(
                cacheNames.map((cacheName) => {
                    if (cacheWhitelist.indexOf(cacheName) === -1) {
                        return caches.delete(cacheName);
                    }
                })
            );
        })
    );
});

// Intercepter les requêtes
self.addEventListener('fetch', (event) => {
    // Ne pas gérer les requêtes non-HTTP
    if (!(event.request.url.startsWith('http') || event.request.url.startsWith('https'))) {
        return;
    }

    event.respondWith(
        caches.match(event.request)
            .then((response) => {
                // Retourner la réponse en cache si disponible
                if (response) {
                    return response;
                }
                // Sinon, faire la requête réseau
                return fetch(event.request).catch(() => {
                    // En mode offline, retourner la page principale
                    if (event.request.destination === 'document') {
                        return caches.match('/');
                    }
                    // Pour les autres ressources, retourner une réponse vide
                    return new Response('', {
                        status: 503,
                        statusText: 'Service Unavailable'
                    });
                });
            })
    );
});
```